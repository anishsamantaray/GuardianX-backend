name: Deploy FastAPI with :latest tag

on:
  push:
    branches:
      - main

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  ECR_URI: ${{ secrets.ECR_URI }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Log in to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_URI

      - name: Build and Push Docker Image (latest tag)
        run: |
          docker build -t guardianx-backend:latest .
          docker tag guardianx-backend:latest $ECR_URI:latest
          docker push $ECR_URI:latest

      - name: Create dummy build file to force Lambda update
        run: |
          echo "Build ID: $GITHUB_SHA" > .build_id

      - name: Install Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: |
          cd terraform
          terraform init

      - name: Generate terraform.tfvars from GitHub Secrets
        run: |
          cat <<EOF > terraform/terraform.tfvars
          lambda_env_vars = {
            SMTP_HOST = "${{ secrets.SMTP_HOST }}"
            SMTP_PORT = "${{ secrets.SMTP_PORT }}"
            SMTP_USER = "${{ secrets.SMTP_USER }}"
            SMTP_PASS = "${{ secrets.SMTP_PASS }}"
            JWT_SECRET_KEY = "${{ secrets.JWT_SECRET_KEY }}"
            JWT_ALGORITHM = "${{ secrets.JWT_ALGORITHM }}"
            JWT_EXPIRE_MINUTES = "${{ secrets.JWT_EXPIRE_MINUTES }}"
            JWT_REFRESH_EXPIRE_MINUTES = "${{ secrets.JWT_REFRESH_EXPIRE_MINUTES }}"
            GOOGLE_PLACES_API_KEY = "${{ secrets.GOOGLE_PLACES_API_KEY }}"
            GUARDIANX_API_KEY = "${{ secrets.GUARDIANX_API_KEY }}"
            FRONTEND_URLS = "${{ secrets.FRONTEND_URLS }}"
          }
          
          image_uri = "${{ secrets.IMAGE_URI }}"
          EOF

      - name: Terraform Apply
        run: |
          cd terraform
          terraform apply -auto-approve -var-file="terraform.tfvars"
